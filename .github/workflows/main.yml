# Set the name of your workflow
name: AndroidBuild

# Controls when the action will run.
# [workflow_dispatch] --> allows to run the workflow manually
# you may use the following to build on each push
# on:
# push:
# branches: [ master ]
on: [workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # In this workflow we use a single job called "build"
  build:
    # The type of runner ie, the OS that the job will run on. apart from mac windows and ubuntu are also available
    runs-on: ubuntu

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so our job can access it
     - uses: actions/checkout@v1

#install flutter
     - name: Flutter get
       uses: subosito/flutter-action@v2
       with:
         flutter-version: '2.8.0'
     - run: flutter pub get

#build and sign the ipa
     - name: Building APK
       run: |
         flutter build apk --profile --split-per-abi
#collect the files            
     - name: collect apk artifacts
       uses: actions/upload-artifact@v2
       with:
        name: apk
        # Path to the release files
        path: build/app/outputs/apk/profile/app-armeabi-v7a-profile.apk
